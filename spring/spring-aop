1. 什么是java中的反射？
反射就是在运行状态中，对于任何一个类，我们都能够知道这个类有哪些方法和属性。对于任何一个对象，
我们都能够对它的方法和属性进行调用。我们把这种动态获取对象信息和调用对象方法的功能称之为反射机制
反射有三种方式：getClass、getName、forName获取

2. 再讲aop之前需要先说说代理，java中的代理分为两种静态代理和动态代理。
静态代理：先实现一个接口，然后对这个接口进行实现，在声明一个代理类，在代理类里面的invoke函数中
可以实现对之前实现的那个接口进行方法调用，像这种一个代理类只能代理一个接口的方式被称为静态代理。
静态代理的好处：可以实现调用方与被调用方的代码隔离
缺点在于一个代理类只能实现一个接口的方法

动态代理：也分为两种jdk动态代理，cglib动态代理。动态代理的好处在于一个代理类可以管理各种接口，
实现了模板模式和适配器模式
jdk动态代理：在jdk的环境下就能够使用，首先需要注意的是jdk动态代理只能用于代理已经实现了的接口
原因在于，java是单继承的模式，每一个代理类都需要继承Proxy类（java.lang.reflect里面），要实现
代理就只能通过实现接口的方式了
实现方式：首先代理类需要实现接口InvocationHandler，然后重写invoke方法；在使用代理类的时候需要
通过Proxy.getProxyClass获得动态代理类；通过反射机制获得代理类的构造方法，方法签名为
getConstructor(InvocationHandler.class)；在通过构造函数创建动态代理对象，将自定义的
InvocationHandler实例传入，就可以实现动态调用


cglib动态代理：可以实现类也可以实现接口的动态代理，是基于asm的。在spring里面的表现在于代理类需
要实现接口methodInterceptor，然后重写intercept方法

3. 
